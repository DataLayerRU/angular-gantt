{"version":3,"sources":["../src/plugins/overlap.js"],"names":[],"mappings":"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","file":"angular-gantt-overlap-plugin.js","sourcesContent":["(function () {\n    'use strict';\n    angular.module('gantt.overlap', ['gantt', 'gantt.overlap.templates']).directive('ganttOverlap', ['moment', function (moment) {\n            return {\n                restrict: 'E',\n                require: '^gantt',\n                scope: {\n                    enabled: '=?',\n                    // Add other option attributes for this plugin\n                    checkOnRender: '=?'\n                },\n                link: function (scope, element, attrs, ganttCtrl) {\n                    var api = ganttCtrl.gantt.api;\n\n                    if (scope.enabled === undefined) {\n                        scope.enabled = true;\n                    }\n                    if (scope.checkOnRender === undefined) {\n                        scope.checkOnRender = false;\n                    }\n\n                    if (scope.enabled) {\n                        api.tasks.on.change(scope, function (task) {\n                            // on every task change check for overlaps\n                            scope.handleOverlaps(task);\n                        });\n\n                        api.core.on.rendered(scope, function () {\n                            if (scope.checkOnRender) {\n                                for (var row in api.gantt.rowsManager.rowsMap) {\n                                    for (var task in api.gantt.rowsManager.rowsMap[row].tasksMap) {\n                                        if (api.gantt.rowsManager.rowsMap[row].tasksMap[task].$element) {\n                                            api.gantt.api.tasks.raise.change(api.gantt.rowsManager.rowsMap[row].tasksMap[task]);\n                                        }\n                                    }\n                                }\n                            }\n                        });\n                    }\n\n                    var overlapsTasks = {};\n\n                    scope.handleOverlaps = function (changedTask) {\n                        // Get all the tasks in the row.\n                        var allTasks = changedTask.row.tasks;\n\n                        var newOverlapsTasks = {};\n                        var removedOverlapsTasks = {};\n\n                        angular.forEach(allTasks, function (task) {\n                            removedOverlapsTasks[task.model.id] = task;\n                        });\n\n                        // set overlaps flag to each task that overlaps other task.\n                        angular.forEach(allTasks, function (currentTask) {\n                            var currentStart, currentEnd;\n                            if (currentTask.model.from.isBefore(currentTask.to)) {\n                                currentStart = currentTask.model.from;\n                                currentEnd = currentTask.model.to;\n                            } else {\n                                currentStart = currentTask.model.to;\n                                currentEnd = currentTask.model.from;\n                            }\n                            var currentRange = moment().range(currentStart, currentEnd);\n                            angular.forEach(allTasks, function (task) {\n                                if (currentTask.model.id !== task.model.id) {\n                                    var start, end;\n                                    if (task.model.from.isBefore(task.model.to)) {\n                                        start = task.model.from;\n                                        end = task.model.to;\n                                    } else {\n                                        start = task.model.to;\n                                        end = task.model.from;\n                                    }\n                                    var range = moment().range(start, end);\n                                    if (range.overlaps(currentRange)) {\n                                        if (!overlapsTasks.hasOwnProperty(task.model.id)) {\n                                            newOverlapsTasks[task.model.id] = task;\n                                        }\n                                        delete removedOverlapsTasks[task.model.id];\n                                        if (!overlapsTasks.hasOwnProperty(currentTask.model.id)) {\n                                            newOverlapsTasks[currentTask.model.id] = currentTask;\n                                        }\n                                        delete removedOverlapsTasks[currentTask.model.id];\n                                    }\n                                }\n                            });\n                        });\n\n                        angular.forEach(removedOverlapsTasks, function (task) {\n                            task.$element.removeClass('gantt-task-overlaps');\n                            delete overlapsTasks[task.model.id];\n                        });\n\n                        angular.forEach(newOverlapsTasks, function (task) {\n                            task.$element.addClass('gantt-task-overlaps');\n                            overlapsTasks[task.model.id] = task;\n                        });\n\n                        overlapsTasks = newOverlapsTasks;\n                    };\n                }\n            };\n        }]);\n}());\n\n"]}